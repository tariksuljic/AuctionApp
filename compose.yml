services:
  postgres:
    build:
      context: ./postgres/
      dockerfile: Dockerfile
    container_name: postgres
    ports:
      - "5432:5432"
    env_file:
      - ./postgres/postgres.env
    volumes:
      - pg_data:/var/lib/postgresql/data
    networks:
      - auction-net

  backend:
    build:
      context: ./auction-app-backend/
      dockerfile: Dockerfile
    container_name: backend
    ports:
      - "8080:8080"
    env_file:
      - ./auction-app-backend/.env
    networks:
      - auction-net
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.backend.rule=(Host(`ec2-3-68-83-11.eu-central-1.compute.amazonaws.com`) && PathPrefix(`/api`))"
      - "traefik.http.services.backend.loadbalancer.server.port=8080"
    depends_on:
      - postgres

  frontend:
    build:
      context: ./auction-app-frontend/
      dockerfile: Dockerfile
    container_name: frontend
    ports:
      - "83:80"
    networks:
      - auction-net
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.frontend.rule=Host(`ec2-3-68-83-11.eu-central-1.compute.amazonaws.com`)"
      - "traefik.http.services.frontend.loadbalancer.server.port=80"
    depends_on:
      - backend

  traefik:
    image: "traefik:v2.9"
    command:
      - "--api.insecure=true"
      - "--providers.docker"
      - "--entrypoints.web.address=:80"
    container_name: traefik
    ports:
      - "80:80"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    networks:
      - auction-net

networks:
  auction-net:

volumes:
  pg_data:
